apiVersion: apps/v1
kind: Deployment
metadata:
  name: order
  namespace: alpha-stocks-dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order
  template:
    metadata:
      annotations:
        tratteria/inject-sidecar: "true"
        tratteria/service-port: "8090"
      labels:
        app: order
    spec:
      serviceAccountName: order-service-account
      containers:
        - env:
            - name: ORDER_DB_PATH
              value: /var/lib/order-db/order.db
            - name: STOCKS_SERVICE_URL
              value: http://stocks:8070
            - name: SPIFFE_ENDPOINT_SOCKET
              value: unix:///run/spire/sockets/agent.sock
            - name: GATEWAY_SERVICE_SPIFFE_ID
              value: spiffe://dev.alphastocks.com/gateway
            - name: ORDER_SERVICE_SPIFFE_ID
              value: spiffe://dev.alphastocks.com/order
            - name: STOCKS_SERVICE_SPIFFE_ID
              value: spiffe://dev.alphastocks.com/stocks
          image: order
          name: order
          imagePullPolicy: Never
          ports:
            - containerPort: 8090
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/order-db
              name: order-db
            - mountPath: /run/spire/sockets
              name: spire-agent-socket
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: order-db
          persistentVolumeClaim:
            claimName: order-db
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/sockets
            type: Directory
